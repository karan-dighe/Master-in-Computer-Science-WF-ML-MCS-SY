) Write a Java Program to implement Abstract Factory Pattern for Shape
interface.
Ans:


 public interface Shape {
 void draw();
}
public class RoundedRectangle implements Shape {
 @Override
 public void draw() {
 System.out.println("Inside RoundedRectangle::draw() method.");
 }
}
public class RoundedSquare implements Shape {
 @Override
 public void draw() {
 System.out.println("Inside RoundedSquare::draw() method.");
 }
}
public class Rectangle implements Shape {
 @Override
 public void draw() {
 System.out.println("Inside Rectangle::draw() method.");
 }
}
public abstract class AbstractFactory {
 abstract Shape getShape(String shapeType) ;
}
public class ShapeFactory extends AbstractFactory {
 @Override
 public Shape getShape(String shapeType){
 if(shapeType.equalsIgnoreCase("RECTANGLE")){
 return new Rectangle();
 }else if(shapeType.equalsIgnoreCase("SQUARE")){
 return new Square();
 }
 return null;
 }
}
public class RoundedShapeFactory extends AbstractFactory {
 @Override
 public Shape getShape(String shapeType){
 if(shapeType.equalsIgnoreCase("RECTANGLE")){
 return new RoundedRectangle();
 }else if(shapeType.equalsIgnoreCase("SQUARE")){
 return new RoundedSquare();
 }
 return null;
 }
}
public class FactoryProducer {
 public static AbstractFactory getFactory(boolean rounded){
 if(rounded){
 return new RoundedShapeFactory();
 }
Else
{
 return new ShapeFactory();
 }
 }
}
public class AbstractFactoryPatternDemo {
 public static void main(String[] args) {
 //get shape factory
 AbstractFactory shapeFactory = FactoryProducer.getFactory(false);
 //get an object of Shape Rectangle
 Shape shape1 = shapeFactory.getShape("RECTANGLE");
 //call draw method of Shape Rectangle
 shape1.draw();
 //get an object of Shape Square
 Shape shape2 = shapeFactory.getShape("SQUARE");
 //call draw method of Shape Square
 shape2.draw();
 //get shape factory
 AbstractFactory shapeFactory1 = FactoryProducer.getFactory(true);
 //get an object of Shape Rectangle
 Shape shape3 = shapeFactory1.getShape("RECTANGLE");
 //call draw method of Shape Rectangle
 shape3.draw();
 //get an object of Shape Square
 Shape shape4 = shapeFactory1.getShape("SQUARE");
 //call draw method of Shape Square
 shape4.draw();
 }
}


Write a python program to implement Multiple Linear Regression for given
dataset.
Ans :

import numpy as np
import matplotlib as mpl
from mpl_toolkits.mplot3d import Axes3D
import matplotlib.pyplot as plt
def generate_dataset(n):
x = []
y = []
random_x1 = np.random.rand()
random_x2 = np.random.rand()
for i in range(n):
x1 = i
x2 = i/2 + np.random.rand()*n
x.append([1, x1, x2])
y.append(random_x1 * x1 + random_x2 * x2 + 1)
return np.array(x), np.array(y)
x, y = generate_dataset(200)
mpl.rcParams['legend.fontsize'] = 12
fig = plt.figure()
ax = fig.add_subplot(projection ='3d')
ax.scatter(x[:, 1], x[:, 2], y, label ='y', s = 5)
ax.legend()
ax.view_init(45, 0)
plt.show()


Write node js application that transfer a file as an attachment on web and
enables browser to prompt the user to download file using express js.
Ans : 
index.js
const express = require('express');
const app = express();
const path = require('path');
app.get('/download/:file(*)',(req, res) => {
var file = req.params.file;
var fileLocation = path.join('./upload',file);
console.log(fileLocation);
res.download(fileLocation, file);
});
app.listen(8002,() => {
console.log(`application is running at: http://localhost:8002`);
});
